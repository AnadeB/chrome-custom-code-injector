/**
 * Image Sprite (via Gulp.imagesprite)
 * --------------------------------------------------------------------
 * - Example of variable output inside the file "_sprite-variable.scss" from gulp.imagesprite plugin
 *      $img-file-name: (0px, 256px, 0px, -256px, 512px, 512px, 512px, 1280px, 'img/sprite.png', 'img1');
 *
 * - Example usage:
 *      @import "_sprite-variable.scss";
 *      .img-retina { @include imgspr($img-file-name, true, true); }
 *      .img-normal { @include imgspr($img-file-name, false, true); }
 */
 @mixin imgspr($imgname, $isRetina: false, $ip: false){
    $bgsize: _filterVal($spritesheet-width, $isRetina) _filterVal($spritesheet-height, $isRetina);
    background-size: _filterVal($bgsize, false, true);
    background-image: url('../img/#{$spritesheet-image}');
    @for $i from 1 through length($imgname) {
        $item: nth($imgname, $i);
        @if $i == 5 { width: _filterVal($item, $isRetina, $ip); }
        @else if $i == 6 { height: _filterVal($item, $isRetina, $ip); }
        @else if $i == 3 { background-position-x: _filterVal($item, $isRetina, $ip); }
        @else if $i == 4 { background-position-y: _filterVal($item, $isRetina, $ip); }
    }
}
@function _filterVal($val, $isRetina:false, $ip:false){
    $newVal: $val;
    @if $isRetina != false { $newVal: $val/2;}
    @if $ip == false { @return $newVal; }
    @else { @return $newVal; }
}


/* Background Image with Non-Retina & Retina Support
 - No responsive support yet
 */
 @mixin bg-img-retina($img-url-normal, $img-url-retina) {
    @media (-webkit-min-device-pixel-ratio: 1.5) {
        background-image: url($img-url-retina);
    }

    @media (-webkit-device-pixel-ratio: 1) {
        background-image: url($img-url-normal);
    }
}