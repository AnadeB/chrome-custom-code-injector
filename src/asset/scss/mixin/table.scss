/* Table Variation - Total No. of Columns & Column Width in Desktop */
@mixin tb-col-layout ($totalNoOfCols) {
    @include mq('d') {
        @if $totalNoOfCols == 5 {
            &:first-child, &:nth-child(2), &:nth-child(3) { width: 22%; }
            &:nth-child(1n + 3) { width: 17%; }     // from 4th column

        } @else if $totalNoOfCols == 6 {
            &:not(:last-child) { width: 16%; }
            &:last-child { width: 20%; }
        }
    }
}


/* Customize nested table background and border */
@mixin nested-table-bg($selector-prefix, $max-level, $base-color, $base-nest-indent: null) {
    $color: $base-color;
    $nest-indent: $base-nest-indent;

    @for $i from 1 through $max-level {
        #{$selector-prefix}#{$i} {
            @if $i != 1 {
                $color: darken($color, 4%);

                @if $nest-indent != null {
                    $nest-indent: $nest-indent + $base-nest-indent;
                }
            }
            background-color: $color;
            box-shadow: inset 0 7px 10px -7px rgba(0, 0, 0, 0.1);

            > tbody > tr {
                &:not(:first-child) {
                    border-top: 1px solid white;
                }

                @if $nest-indent != null {
                    > td:not([colspan]):first-child {
                        text-indent: $nest-indent;
                    }
                }
            }
        }
    }
}


/**
 * Generate the width for <th>, <td> children from a list of width values
 *
 * Usage:
 * $cells-width: (65, 80, (270, 2), 220, (75, 3), (50, 3));
 *
 * if item is a list, then it means it repeat the value no. of times for the following cell
 * e.g. (270, 2) means repeat 270px twice
 */
 @mixin gen-tb-cells-width($cells-width) {
    @for $i from 1 through length($cells-width) {
        $value: nth($cells-width, $i);
        $start: $i !default;

        @if length($value) == 2 {
            $end: $start + nth($value, 2) - 1;
            &:nth-child(n+#{$start}):nth-child(-n+#{$end}) {
                width: nth($value, 1) + px;
            }
            $start: $end + 1;

        } @else {
            &:nth-child(#{$start}) {
                width: nth($cells-width, $i) + px;
            }
            $start: $start + 1;
        }
    }
}